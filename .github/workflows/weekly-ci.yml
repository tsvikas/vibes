name: Scheduled CI

on:
  workflow_dispatch:
  schedule:
    - cron: 0 6 * * 0  # Sunday at 6 AM UTC

permissions:
  contents: read
  issues: write

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: '3.13'
          enable-cache: false
      - name: Install packages
        run: >-
          uv sync
          --all-extras
          --no-default-groups
          --group test
          --exact
          --upgrade
          --resolution highest
      - name: List packages
        run: uv pip list
      - name: Run tests
        run: uv run --no-sync pytest
      - name: Create failure issue
        if: failure()
        uses: actions/github-script@v8
        with:
          script: |
            // Check for existing test failure issues
            const existingIssues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'scheduled-ci-tests',
              per_page: 10
            });

            if (existingIssues.data.length > 0) {
              // Update existing issue
              const existingIssue = existingIssues.data[0];
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existingIssue.number,
                body: `Another test failure occurred on ${context.sha.substring(0, 7)}, see the [workflow run](${context.payload.repository.html_url}/actions/runs/${context.runId})`
              });
              await core.notice(`Updated existing issue ${existingIssue.html_url}`);

            } else {
              // Create new issue
              const issue = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `Scheduled CI Tests Failed - ${new Date().toISOString().split('T')[0]}`,
                body: `The scheduled CI tests failed on ${context.sha.substring(0, 7)}.

            **Failed Jobs:**
            - Check the [workflow run](${context.payload.repository.html_url}/actions/runs/${context.runId})

            **Likely Causes:**
            - New dependency versions with breaking changes

            **Next Steps:**
            - Review the logs above
            - Update code for new dependencies or limit package versions
            - Re-run the workflow to verify fixes`,
                labels: ['scheduled-ci-tests'],
                assignees: [context.repo.owner],
              });
              await core.notice(`Created issue ${issue.data.html_url}`);
            }

  pip-audit:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@v6
      - name: Install packages
        run: >-
          uv sync
          --all-extras
          --all-groups
          --exact
          --locked
      - name: List packages
        run: uv pip list
      - name: Run pip-audit
        run: >-
          uv run --no-sync --with pip-audit pip-audit --skip-editable
          --ignore-vuln GHSA-4xh5-x5gv-qwph
        # pip-audit ignored vuln:
        # GHSA-4xh5-x5gv-qwph:
        #   vuln is in pip, which is not a pinned requirwement
        #   vuln is fixed in recent python versions
        #   see https://github.com/pypa/pip/issues/13607
      - name: Create failure issue
        if: failure()
        uses: actions/github-script@v8
        with:
          script: |
            // Check for existing audit failure issues
            const existingIssues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'scheduled-ci-audit',
              per_page: 10
            });

            if (existingIssues.data.length > 0) {
              // Update existing issue instead of creating new one
              const existingIssue = existingIssues.data[0];
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existingIssue.number,
                body: `Another audit failure occurred on ${context.sha.substring(0, 7)}, see the [workflow run](${context.payload.repository.html_url}/actions/runs/${context.runId})`
              });
              await core.notice(`Updated existing issue ${existingIssue.html_url}`);

            } else {
              // Create new issue
              const issue = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `Scheduled CI Audit Failed - ${new Date().toISOString().split('T')[0]}`,
                body: `The scheduled CI audit check failed on ${context.sha.substring(0, 7)}.

            **Failed Jobs:**
            - Check the [workflow run](${context.payload.repository.html_url}/actions/runs/${context.runId})

            **Likely Causes:**
            - New security vulnerabilities detected by pip-audit

            **Next Steps:**
            - Review the logs above
            - Update locked dependencies
            - Re-run the workflow to verify fixes`,
                labels: ['scheduled-ci-audit'],
                assignees: [context.repo.owner],
              });
              await core.notice(`Created issue ${issue.data.html_url}`);
            }
